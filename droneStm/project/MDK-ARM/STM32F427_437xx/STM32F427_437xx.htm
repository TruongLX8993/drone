<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [STM32F427_437xx\STM32F427_437xx.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image STM32F427_437xx\STM32F427_437xx.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Thu Sep 07 14:22:47 2017
<BR><P>
<H3>Maximum Stack Usage =        720 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; loop &rArr; updateEulerBlock &rArr; updateCalculator &rArr; updateImuCalculator &rArr; updateImuCalculatorWithOutHeading &rArr; quaternionToDegEuler &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1d]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1d]">ADC_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[5]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[1f]">CAN1_RX0_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[20]">CAN1_RX1_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[21]">CAN1_SCE_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[1e]">CAN1_TX_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[4b]">CAN2_RX0_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[4c]">CAN2_RX1_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[4d]">CAN2_SCE_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[4a]">CAN2_TX_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[5a]">CRYP_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[59]">DCMI_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream0_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream1_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream2_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream3_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream4_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream5_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[1c]">DMA1_Stream6_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[3a]">DMA1_Stream7_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[63]">DMA2D_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream0_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream1_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream2_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream3_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[47]">DMA2_Stream4_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream5_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream6_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[51]">DMA2_Stream7_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[8]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[48]">ETH_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[49]">ETH_WKUP_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[11]">EXTI0_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[33]">EXTI15_10_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[12]">EXTI1_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[13]">EXTI2_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[14]">EXTI3_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[15]">EXTI4_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[22]">EXTI9_5_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[f]">FLASH_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[3b]">FMC_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[5c]">FPU_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[5b]">HASH_RNG_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[2b]">I2C1_ER_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[2a]">I2C1_EV_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[2d]">I2C2_ER_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[2c]">I2C2_EV_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[54]">I2C3_ER_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[53]">I2C3_EV_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[4]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[4e]">OTG_FS_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[35]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[56]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[55]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[58]">OTG_HS_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[57]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[c]">PVD_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from stm32f4xx_it.o(i.PendSV_Handler) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[10]">RCC_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[34]">RTC_Alarm_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[e]">RTC_WKUP_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[62]">SAI1_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[3c]">SDIO_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[2e]">SPI1_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[2f]">SPI2_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[3e]">SPI3_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[5f]">SPI4_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[60]">SPI5_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[61]">SPI6_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from systemtick.o(i.SysTick_Handler) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[65]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f427_437xx.o(.text)
 <LI><a href="#[d]">TAMP_STAMP_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[23]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[26]">TIM1_CC_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[25]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[24]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[27]">TIM2_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[28]">TIM3_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[29]">TIM4_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[3d]">TIM5_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[41]">TIM6_DAC_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[42]">TIM7_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[36]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[39]">TIM8_CC_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[38]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[37]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[3f]">UART4_IRQHandler</a> from uarthandler.o(i.UART4_IRQHandler) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[40]">UART5_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[5d]">UART7_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[5e]">UART8_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[30]">USART1_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[31]">USART2_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[32]">USART3_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[52]">USART6_IRQHandler</a> from uarthandler.o(i.USART6_IRQHandler) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[6]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_stm32f427_437xx.o(.text) referenced from startup_stm32f427_437xx.o(RESET)
 <LI><a href="#[66]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f427_437xx.o(.text)
 <LI><a href="#[64]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[67]">nvicHandler</a> from uartinterrupt.o(i.nvicHandler) referenced from uartinterrupt.o(i.initUart4NVIC)
 <LI><a href="#[67]">nvicHandler</a> from uartinterrupt.o(i.nvicHandler) referenced from uartinterrupt.o(i.initUart6NVIC)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[66]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(.text)
</UL>
<P><STRONG><a name="[1c7]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[68]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1c8]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[1c9]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[1ca]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[1cb]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[1cc]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f427_437xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[ba]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addBytesToBuffer
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyData
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFullDataMpu9250
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readAccelAndGyroDataMpu9250
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMpu9250Reader
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertImuData
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calGyroOffset
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
</UL>

<P><STRONG><a name="[bd]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibMagnetVector
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertImuData
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;altCalibGetSample
</UL>

<P><STRONG><a name="[1cd]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startAltitudeCalibrationProgram
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateAltitude
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateAltitude
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateAltitude
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startAltitudeCalibrationProgram
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_l2f</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ffltl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_l2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculatePressure
</UL>

<P><STRONG><a name="[d0]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;constraintFloatValue
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateImuCalculator
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quaternionToDegEuler
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateAltitude
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;testGyroData
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startAltitudeCalibrationProgram
</UL>

<P><STRONG><a name="[ae]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;testGyroData
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;constraintFloatValue
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateImuCalculator
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quaternionToDegEuler
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateAltitude
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startAltitudeCalibrationProgram
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[1ce]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1cf]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[1d0]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[74]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
</UL>

<P><STRONG><a name="[6e]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[6d]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[af]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[1d1]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[69]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[1d2]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[1d3]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[1d4]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1d5]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[105]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUart6
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUart4
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGpioI2C
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorOutGpio
</UL>

<P><STRONG><a name="[106]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUart6
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUart4
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGpioI2C
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorOutGpio
</UL>

<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[184]"></a>I2C_AcknowledgeConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_AcknowledgeConfig))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBytesViaI2C
</UL>

<P><STRONG><a name="[92]"></a>I2C_CheckEvent</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, stm32f4xx_i2c.o(i.I2C_CheckEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_CheckEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeBytesWithOutRegViaI2c
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startI2C
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBytesViaI2C
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Start
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_ReadNack
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_ReadAck
</UL>

<P><STRONG><a name="[15d]"></a>I2C_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initI2C2
</UL>

<P><STRONG><a name="[7b]"></a>I2C_DeInit</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32f4xx_i2c.o(i.I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initI2C2
</UL>

<P><STRONG><a name="[1aa]"></a>I2C_GenerateSTART</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_GenerateSTART))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startI2C
</UL>

<P><STRONG><a name="[1ac]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_GenerateSTOP))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopI2C
</UL>

<P><STRONG><a name="[1a9]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, stm32f4xx_i2c.o(i.I2C_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startI2C
</UL>

<P><STRONG><a name="[7d]"></a>I2C_Init</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, stm32f4xx_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initI2C2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Init
</UL>

<P><STRONG><a name="[186]"></a>I2C_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBytesViaI2C
</UL>

<P><STRONG><a name="[1ab]"></a>I2C_Send7bitAddress</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_Send7bitAddress))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startI2C
</UL>

<P><STRONG><a name="[1c6]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeBytesWithOutRegViaI2c
</UL>

<P><STRONG><a name="[4]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[10c]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUartNVIC
</UL>

<P><STRONG><a name="[10b]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUartNVIC
</UL>

<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[104]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUart6
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUart4
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGpioI2C
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorOutGpio
</UL>

<P><STRONG><a name="[107]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUart4
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initI2C2
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCounterTimeMain
</UL>

<P><STRONG><a name="[7c]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
</UL>

<P><STRONG><a name="[109]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUart6
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorTimer
</UL>

<P><STRONG><a name="[7e]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, systemtick.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSystemTickSubcriber
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(.text)
</UL>
<P><STRONG><a name="[16d]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ARRPreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorPwms
</UL>

<P><STRONG><a name="[134]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentTime
</UL>

<P><STRONG><a name="[14f]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCounterTimeMain
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorPwms
</UL>

<P><STRONG><a name="[16e]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_CtrlPWMOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorPwms
</UL>

<P><STRONG><a name="[135]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_GetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentTime
</UL>

<P><STRONG><a name="[133]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentTime
</UL>

<P><STRONG><a name="[165]"></a>TIM_OC1Init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorPwms
</UL>

<P><STRONG><a name="[166]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorPwms
</UL>

<P><STRONG><a name="[167]"></a>TIM_OC2Init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorPwms
</UL>

<P><STRONG><a name="[168]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_OC2PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorPwms
</UL>

<P><STRONG><a name="[169]"></a>TIM_OC3Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorPwms
</UL>

<P><STRONG><a name="[16a]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_OC3PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorPwms
</UL>

<P><STRONG><a name="[16b]"></a>TIM_OC4Init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_OC4Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorPwms
</UL>

<P><STRONG><a name="[16c]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_OC4PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorPwms
</UL>

<P><STRONG><a name="[1bf]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SetCompare1))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateMotorControlBlock
</UL>

<P><STRONG><a name="[1c0]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SetCompare2))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateMotorControlBlock
</UL>

<P><STRONG><a name="[1c1]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SetCompare3))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateMotorControlBlock
</UL>

<P><STRONG><a name="[1c2]"></a>TIM_SetCompare4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SetCompare4))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateMotorControlBlock
</UL>

<P><STRONG><a name="[14e]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCounterTimeMain
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorTimer
</UL>

<P><STRONG><a name="[82]"></a>TM_GPIO_GetPortSource</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tm_stm32f4_gpio.o(i.TM_GPIO_GetPortSource))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_INT_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_INT_EnableClock
</UL>

<P><STRONG><a name="[81]"></a>TM_GPIO_INT_EnableClock</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, tm_stm32f4_gpio.o(i.TM_GPIO_INT_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TM_GPIO_INT_EnableClock
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_GetPortSource
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_InitAlternate
</UL>

<P><STRONG><a name="[83]"></a>TM_GPIO_INT_Init</STRONG> (Thumb, 170 bytes, Stack size 28 bytes, tm_stm32f4_gpio.o(i.TM_GPIO_INT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_GetPortSource
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_InitAlternate
</UL>

<P><STRONG><a name="[84]"></a>TM_GPIO_Init</STRONG> (Thumb, 48 bytes, Stack size 36 bytes, tm_stm32f4_gpio.o(i.TM_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TM_GPIO_Init &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_INT_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_INT_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableI2C
</UL>

<P><STRONG><a name="[85]"></a>TM_GPIO_InitAlternate</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, tm_stm32f4_gpio.o(i.TM_GPIO_InitAlternate))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = TM_GPIO_InitAlternate &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_INT_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_INT_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C3_INT_InitPins
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C2_INT_InitPins
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C1_INT_InitPins
</UL>

<P><STRONG><a name="[8a]"></a>TM_I2C_Init</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, tm_stm32f4_i2c.o(i.TM_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = TM_I2C_Init &rArr; TM_I2C3_INT_InitPins &rArr; TM_GPIO_InitAlternate &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C3_INT_InitPins
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C2_INT_InitPins
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C1_INT_InitPins
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_MPU9250_Init
</UL>

<P><STRONG><a name="[87]"></a>TM_I2C_InitCustomPinsCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tm_stm32f4_i2c.o(i.TM_I2C_InitCustomPinsCallback))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C3_INT_InitPins
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C2_INT_InitPins
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C1_INT_InitPins
</UL>

<P><STRONG><a name="[8b]"></a>TM_I2C_IsDeviceConnected</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, tm_stm32f4_i2c.o(i.TM_I2C_IsDeviceConnected))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TM_I2C_IsDeviceConnected &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Stop
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_MPU9250_Init
</UL>

<P><STRONG><a name="[8e]"></a>TM_I2C_Read</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, tm_stm32f4_i2c.o(i.TM_I2C_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TM_I2C_Read &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_WriteData
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Stop
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Start
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_ReadNack
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_MPU9250_ReadMag
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_MPU9250_Init
</UL>

<P><STRONG><a name="[91]"></a>TM_I2C_ReadAck</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, tm_stm32f4_i2c.o(i.TM_I2C_ReadAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TM_I2C_ReadAck &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_ReadMulti
</UL>

<P><STRONG><a name="[93]"></a>TM_I2C_ReadMulti</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, tm_stm32f4_i2c.o(i.TM_I2C_ReadMulti))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TM_I2C_ReadMulti &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_WriteData
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Start
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_ReadNack
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_ReadAck
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_MPU9250_ReadMag
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_MPU9250_ReadGyro
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_MPU9250_ReadAcce
</UL>

<P><STRONG><a name="[90]"></a>TM_I2C_ReadNack</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, tm_stm32f4_i2c.o(i.TM_I2C_ReadNack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TM_I2C_ReadNack &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_ReadMulti
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Read
</UL>

<P><STRONG><a name="[8c]"></a>TM_I2C_Start</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, tm_stm32f4_i2c.o(i.TM_I2C_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Write
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_ReadMulti
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Read
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_IsDeviceConnected
</UL>

<P><STRONG><a name="[8d]"></a>TM_I2C_Stop</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, tm_stm32f4_i2c.o(i.TM_I2C_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Write
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Read
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_IsDeviceConnected
</UL>

<P><STRONG><a name="[94]"></a>TM_I2C_Write</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, tm_stm32f4_i2c.o(i.TM_I2C_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TM_I2C_Write &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_WriteData
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Stop
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_MPU9250_Init
</UL>

<P><STRONG><a name="[8f]"></a>TM_I2C_WriteData</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, tm_stm32f4_i2c.o(i.TM_I2C_WriteData))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Write
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_ReadMulti
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Read
</UL>

<P><STRONG><a name="[95]"></a>TM_MPU9250_Init</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, tm_stm32f4_mpu9250.o(i.TM_MPU9250_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = TM_MPU9250_Init &rArr; TM_I2C_Init &rArr; TM_I2C3_INT_InitPins &rArr; TM_GPIO_InitAlternate &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMilis
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Write
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Read
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_IsDeviceConnected
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catchErrorMpu9250
</UL>

<P><STRONG><a name="[97]"></a>TM_MPU9250_ReadAcce</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, tm_stm32f4_mpu9250.o(i.TM_MPU9250_ReadAcce))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TM_MPU9250_ReadAcce &rArr; TM_I2C_ReadMulti &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_ReadMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestAccelAndGyro
</UL>

<P><STRONG><a name="[98]"></a>TM_MPU9250_ReadGyro</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, tm_stm32f4_mpu9250.o(i.TM_MPU9250_ReadGyro))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TM_MPU9250_ReadGyro &rArr; TM_I2C_ReadMulti &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_ReadMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestAccelAndGyro
</UL>

<P><STRONG><a name="[99]"></a>TM_MPU9250_ReadMag</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, tm_stm32f4_mpu9250.o(i.TM_MPU9250_ReadMag))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TM_MPU9250_ReadMag &rArr; TM_I2C_ReadMulti &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_ReadMulti
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestMagnet
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseData
</UL>

<P><STRONG><a name="[3f]"></a>UART4_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uarthandler.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getListenerUartList
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>USART6_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uarthandler.o(i.USART6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART6_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getListenerUartList
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[129]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart6NVIC
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart4NVIC
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableUart
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableUart
</UL>

<P><STRONG><a name="[10d]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f4xx_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUartNVIC
</UL>

<P><STRONG><a name="[9d]"></a>USART_Init</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUart6
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUart4
</UL>

<P><STRONG><a name="[9a]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[6]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f427_437xx.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[193]"></a>free</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, mallocr.o(i.__free$realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>

<P><STRONG><a name="[9e]"></a>__hardfp_asin</STRONG> (Thumb, 770 bytes, Stack size 88 bytes, asin.o(i.__hardfp_asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __hardfp_asin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quaternionToDegEuler
</UL>

<P><STRONG><a name="[a7]"></a>__hardfp_atan</STRONG> (Thumb, 622 bytes, Stack size 48 bytes, atan.o(i.__hardfp_atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[a8]"></a>__hardfp_atan2</STRONG> (Thumb, 432 bytes, Stack size 48 bytes, atan2.o(i.__hardfp_atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quaternionToDegEuler
</UL>

<P><STRONG><a name="[10e]"></a>__hardfp_fabs</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fabs.o(i.__hardfp_fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;constraintFloatValue
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;testGyroData
</UL>

<P><STRONG><a name="[ab]"></a>__hardfp_pow</STRONG> (Thumb, 3072 bytes, Stack size 192 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateAltitude
</UL>

<P><STRONG><a name="[b0]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateImuCalculator
</UL>

<P><STRONG><a name="[b1]"></a>__hardfp_sqrtf</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sqrtf.o(i.__hardfp_sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaliseVector3D
</UL>

<P><STRONG><a name="[a4]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[b2]"></a>malloc</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, mallocr.o(i.__malloc$realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = malloc &rArr; internal_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuffer
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>

<P><STRONG><a name="[ac]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[9f]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[a9]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[a1]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[ad]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_overflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[a3]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[1d6]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[1d7]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1d8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[a0]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[b4]"></a>addByteToBuffer</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, buffer.o(i.addByteToBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = addByteToBuffer &rArr; addBytesToBuffer &rArr; expandBuffer &rArr; realloc &rArr; malloc &rArr; internal_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addBytesToBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvicHandler
</UL>

<P><STRONG><a name="[b5]"></a>addBytesToBuffer</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, buffer.o(i.addBytesToBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = addBytesToBuffer &rArr; expandBuffer &rArr; realloc &rArr; malloc &rArr; internal_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeBytesInBuffer
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isBufferNull
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNumberEmptyBuffer
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expandBuffer
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addByteToBuffer
</UL>

<P><STRONG><a name="[c5]"></a>addSample</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gyrooffsetcalculator.o(i.addSample))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = addSample
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calGyroOffset
</UL>

<P><STRONG><a name="[bb]"></a>altCalibGetSample</STRONG> (Thumb, 40 bytes, Stack size 64 bytes, altitudecalibrationprogram.o(i.altCalibGetSample))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = altCalibGetSample &rArr; updateBarometerMs5611 &rArr; readTempFromMs5611 &rArr; updateTempAndPressureMs5611Calculator &rArr; calculateAltitude &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBarometerMs5611
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMs5611Altitude
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startAltitudeCalibrationProgram
</UL>

<P><STRONG><a name="[aa]"></a>atan</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[bf]"></a>calD</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, pid.o(i.calD))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = calD &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;constraintFloatValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateErrorPID
</UL>

<P><STRONG><a name="[c1]"></a>calE</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, pid.o(i.calE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = calE &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;constraintFloatValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePID
</UL>

<P><STRONG><a name="[c2]"></a>calGyroOffset</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, gyrocalibrationprogram.o(i.calGyroOffset))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = calGyroOffset &rArr; readAccelAndGyroDataMpu9250 &rArr; parseData &rArr; TM_MPU9250_ReadMag &rArr; TM_I2C_ReadMulti &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMilis
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGyroCalculateOffsetResult
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addSample
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readAccelAndGyroDataMpu9250
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getRawGyro
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startGyroCalibrationProgram
</UL>

<P><STRONG><a name="[c7]"></a>calI</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, pid.o(i.calI))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = calI &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;constraintFloatValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateErrorPID
</UL>

<P><STRONG><a name="[c8]"></a>calNewThr</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, holdaltitudemode.o(i.calNewThr))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = calNewThr &rArr; updateHoldAltitude &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getRealAccelZ
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAltitudeFromAltitudeBlock
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getControlThrValue
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldAltitude
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableHoldAltitudeMode
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldAltitudeModeWithOutPwm
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldAltitudeMode
</UL>

<P><STRONG><a name="[ce]"></a>calP</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, pid.o(i.calP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = calP &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;constraintFloatValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateErrorPID
</UL>

<P><STRONG><a name="[cf]"></a>calculateAltitude</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, ms5611calculator.o(i.calculateAltitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = calculateAltitude &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateTempAndPressureMs5611Calculator
</UL>

<P><STRONG><a name="[d1]"></a>calculatePressure</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, ms5611calculator.o(i.calculatePressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = calculatePressure &rArr; __aeabi_l2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateTempAndPressureMs5611Calculator
</UL>

<P><STRONG><a name="[d2]"></a>calculatePwm</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, generalfly.o(i.calculatePwm))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = calculatePwm
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetFloatArray
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;constraintFloatValues
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldPositionModeWithThr
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldAltitudeMode
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBasicFlyMode
</UL>

<P><STRONG><a name="[1c5]"></a>calculateTemp</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ms5611calculator.o(i.calculateTemp))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateTempAndPressureMs5611Calculator
</UL>

<P><STRONG><a name="[d7]"></a>calibMagnet</STRONG> (Thumb, 110 bytes, Stack size 28 bytes, magnetcalibrate.o(i.calibMagnet))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = calibMagnet
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibMagnetVector
</UL>

<P><STRONG><a name="[d5]"></a>calibMagnetVector</STRONG> (Thumb, 90 bytes, Stack size 104 bytes, magnetcalibrate.o(i.calibMagnetVector))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = calibMagnetVector &rArr; calibMagnet
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertVector3DToArray
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertArrayToVector3D
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibMagnet
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertImuData
</UL>

<P><STRONG><a name="[d9]"></a>calibrate</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, imucalibrate.o(i.calibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = calibrate &rArr; subVector3D16
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subVector3D16
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertImuData
</UL>

<P><STRONG><a name="[db]"></a>callFunctionEvadeInterrupt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(i.callFunctionEvadeInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = callFunctionEvadeInterrupt &rArr; updateImuBlock &rArr; readFullDataMpu9250 &rArr; parseData &rArr; TM_MPU9250_ReadMag &rArr; TM_I2C_ReadMulti &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateImuBlock
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableController
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableController
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
</UL>

<P><STRONG><a name="[df]"></a>catchErrorMpu9250</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mpu9250reader.o(i.catchErrorMpu9250))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = catchErrorMpu9250 &rArr; TM_MPU9250_Init &rArr; TM_I2C_Init &rArr; TM_I2C3_INT_InitPins &rArr; TM_GPIO_InitAlternate &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_MPU9250_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configGeneral
</UL>

<P><STRONG><a name="[e0]"></a>changeSetPointPitch</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, quadcore.o(i.changeSetPointPitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = changeSetPointPitch &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentTime
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateControlToQuadCore
</UL>

<P><STRONG><a name="[e3]"></a>changeSetPointRoll</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, quadcore.o(i.changeSetPointRoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = changeSetPointRoll &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentTime
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateControlToQuadCore
</UL>

<P><STRONG><a name="[e4]"></a>changeSetPointYaw</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, quadcore.o(i.changeSetPointYaw))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = changeSetPointYaw &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentTime
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateControlToQuadCore
</UL>

<P><STRONG><a name="[e5]"></a>checkAndStartCalibrate</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.checkAndStartCalibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = checkAndStartCalibrate &rArr; startCalibrate &rArr; startAltitudeCalibrationProgram &rArr; altCalibGetSample &rArr; updateBarometerMs5611 &rArr; readTempFromMs5611 &rArr; updateTempAndPressureMs5611Calculator &rArr; calculateAltitude &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isRunCalibrateProgram
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startCalibrate
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
</UL>

<P><STRONG><a name="[e8]"></a>checkDeltaTimeChecker</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, deltatimechecker.o(i.checkDeltaTimeChecker))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = checkDeltaTimeChecker &rArr; resetDeltaTimeChecker &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetDeltaTimeChecker
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnableDeltaTimeChecker
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compareWithCurrentTime
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTimeAccuracy
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTimeWaitReponse
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
</UL>

<P><STRONG><a name="[ec]"></a>checkHoldAllControl</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, analystcontrol.o(i.checkHoldAllControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = checkHoldAllControl &rArr; checkHoldPositionControl
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkHoldPositionControl
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkHoldAltitudeControl
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFlyAction
</UL>

<P><STRONG><a name="[ed]"></a>checkHoldAltitudeControl</STRONG> (Thumb, 68 bytes, Stack size 56 bytes, analystcontrol.o(i.checkHoldAltitudeControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = checkHoldAltitudeControl
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getControlThrValue
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isQuadOn
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkHoldAllControl
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFlyAction
</UL>

<P><STRONG><a name="[ee]"></a>checkHoldPositionControl</STRONG> (Thumb, 142 bytes, Stack size 128 bytes, analystcontrol.o(i.checkHoldPositionControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = checkHoldPositionControl
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getControlThrValue
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getControlRollValue
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getControlPitchValue
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isQuadOn
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkHoldAllControl
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFlyAction
</UL>

<P><STRONG><a name="[f2]"></a>checkStartControl</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, analystcontrol.o(i.checkStartControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = checkStartControl
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getControlThrValue
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isQuadOn
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFlyAction
</UL>

<P><STRONG><a name="[7f]"></a>checkSystemTickSubcriber</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, systemtick.o(i.checkSystemTickSubcriber))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[f3]"></a>checkTakeOffControl</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, analystcontrol.o(i.checkTakeOffControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = checkTakeOffControl
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getControlThrValue
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isQuadOn
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFlyAction
</UL>

<P><STRONG><a name="[f4]"></a>checkTimeAccuracy</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, deltatimechecker.o(i.checkTimeAccuracy))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = checkTimeAccuracy &rArr; initDeltaTimeChecker &rArr; resetDeltaTimeChecker &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnableDeltaTimeChecker
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDeltaTimeChecker
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDeltaTimeChecker
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOnControl
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOffControl
</UL>

<P><STRONG><a name="[f6]"></a>checkTimeWaitReponse</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, barometerms5611.o(i.checkTimeWaitReponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = checkTimeWaitReponse &rArr; checkDeltaTimeChecker &rArr; resetDeltaTimeChecker &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableDeltaTimeChecker
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDeltaTimeChecker
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNextAction
</UL>

<P><STRONG><a name="[fd]"></a>checkTurnOffCondition</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, analystcontrol.o(i.checkTurnOffCondition))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOffControl
</UL>

<P><STRONG><a name="[f8]"></a>checkTurnOffControl</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, analystcontrol.o(i.checkTurnOffControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = checkTurnOffControl &rArr; checkTimeAccuracy &rArr; initDeltaTimeChecker &rArr; resetDeltaTimeChecker &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnableDeltaTimeChecker
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableDeltaTimeChecker
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTimeAccuracy
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChannel4Value
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChannel3Value
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChannel2Value
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChannel1Value
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isQuadOn
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOffCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFlyAction
</UL>

<P><STRONG><a name="[100]"></a>checkTurnOnCondition</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, analystcontrol.o(i.checkTurnOnCondition))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOnControl
</UL>

<P><STRONG><a name="[fe]"></a>checkTurnOnControl</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, analystcontrol.o(i.checkTurnOnControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = checkTurnOnControl &rArr; checkTimeAccuracy &rArr; initDeltaTimeChecker &rArr; resetDeltaTimeChecker &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnableDeltaTimeChecker
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableDeltaTimeChecker
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTimeAccuracy
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChannel4Value
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChannel3Value
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChannel2Value
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChannel1Value
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isQuadOff
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOnCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFlyAction
</UL>

<P><STRONG><a name="[101]"></a>clearBuffer</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, buffer.o(i.clearBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = clearBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isBufferNull
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvicHandler
</UL>

<P><STRONG><a name="[ea]"></a>compareWithCurrentTime</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, deltatimechecker.o(i.compareWithCurrentTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = compareWithCurrentTime &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentTime
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDeltaTimeChecker
</UL>

<P><STRONG><a name="[102]"></a>configGeneral</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mpu9250reader.o(i.configGeneral))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = configGeneral &rArr; catchErrorMpu9250 &rArr; TM_MPU9250_Init &rArr; TM_I2C_Init &rArr; TM_I2C3_INT_InitPins &rArr; TM_GPIO_InitAlternate &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMilis
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catchErrorMpu9250
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMpu9250Reader
</UL>

<P><STRONG><a name="[103]"></a>configUart4</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, uartcontrol.o(i.configUart4))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = configUart4 &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart4NVIC
</UL>

<P><STRONG><a name="[108]"></a>configUart6</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, uartcontrol.o(i.configUart6))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = configUart6 &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart6NVIC
</UL>

<P><STRONG><a name="[10a]"></a>configUartNVIC</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, uartinterrupt.o(i.configUartNVIC))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = configUartNVIC &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart6NVIC
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart4NVIC
</UL>

<P><STRONG><a name="[c0]"></a>constraintFloatValue</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, constraint.o(i.constraintFloatValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;constraintFloatValues
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateErrorPID
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sumPID
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calP
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calI
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calE
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calD
</UL>

<P><STRONG><a name="[d4]"></a>constraintFloatValues</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, constraint.o(i.constraintFloatValues))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;constraintFloatValue
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculatePwm
</UL>

<P><STRONG><a name="[d8]"></a>convertArrayToVector3D</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, vector3d.o(i.convertArrayToVector3D))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = convertArrayToVector3D
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibMagnetVector
</UL>

<P><STRONG><a name="[156]"></a>convertArrayToVector3DInt16</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, vector3d.o(i.convertArrayToVector3DInt16))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = convertArrayToVector3DInt16
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGyroCalib
</UL>

<P><STRONG><a name="[10f]"></a>convertData</STRONG> (Thumb, 158 bytes, Stack size 72 bytes, eulercalculator.o(i.convertData))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = convertData &rArr; normaliseVector3D &rArr; scaleVector3D
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scaleVector3D
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaliseVector3D
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertVector3DToArray
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateImuCalculator
</UL>

<P><STRONG><a name="[164]"></a>convertEscControlToCompareVal</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, motorcontrolblock.o(i.convertEscControlToCompareVal))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateMotorControlBlock
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorPwms
</UL>

<P><STRONG><a name="[112]"></a>convertImuData</STRONG> (Thumb, 330 bytes, Stack size 40 bytes, imublock.o(i.convertImuData))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = convertImuData &rArr; calibMagnetVector &rArr; calibMagnet
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibMagnetVector
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibrate
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getRawMagnet
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getRawGyro
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getRawAccel
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertRawMagnetToRealMagnet
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertRawGyroToRealGyro
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertRawAccelToRealAccel
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMagnet
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGyro
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAccel
</UL>

<P><STRONG><a name="[116]"></a>convertRawAccelToRealAccel</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, mpu9250reader.o(i.convertRawAccelToRealAccel))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = convertRawAccelToRealAccel &rArr; scaleVector3DIntToVector3D
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scaleVector3DIntToVector3D
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertImuData
</UL>

<P><STRONG><a name="[115]"></a>convertRawGyroToRealGyro</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, mpu9250reader.o(i.convertRawGyroToRealGyro))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = convertRawGyroToRealGyro &rArr; scaleVector3DIntToVector3D
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scaleVector3DIntToVector3D
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertImuData
</UL>

<P><STRONG><a name="[117]"></a>convertRawMagnetToRealMagnet</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, mpu9250reader.o(i.convertRawMagnetToRealMagnet))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = convertRawMagnetToRealMagnet &rArr; scaleVector3DIntToVector3D
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scaleVector3DIntToVector3D
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertImuData
</UL>

<P><STRONG><a name="[1a7]"></a>convertVector3DInt16ToArray</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, vector3d.o(i.convertVector3DInt16ToArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = convertVector3DInt16ToArray
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startGyroCalibrationProgram
</UL>

<P><STRONG><a name="[d6]"></a>convertVector3DToArray</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, vector3d.o(i.convertVector3DToArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = convertVector3DToArray
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibMagnetVector
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertData
</UL>

<P><STRONG><a name="[119]"></a>copyData</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, arrayutil.o(i.copyData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = copyData
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestMagnet
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestAccelAndGyro
</UL>

<P><STRONG><a name="[13a]"></a>copyInt16_tArray</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, arrayutil.o(i.copyInt16_tArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = copyInt16_tArray
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGyroOffset
</UL>

<P><STRONG><a name="[18b]"></a>copyMs5611Eprom</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, ms5611epromreader.o(i.copyMs5611Eprom))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = copyMs5611Eprom
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEprom
</UL>

<P><STRONG><a name="[194]"></a>copyUartListener</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, uarthandler.o(i.copyUartListener))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = copyUartListener
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;registerUartListener
</UL>

<P><STRONG><a name="[11a]"></a>delayMicros</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, delay.o(i.delayMicros))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = delayMicros &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentTime
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMilis
</UL>

<P><STRONG><a name="[96]"></a>delayMilis</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, delay.o(i.delayMilis))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = delayMilis &rArr; delayMicros &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMicros
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetMs5611
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_MPU9250_Init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configGeneral
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUp
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calGyroOffset
</UL>

<P><STRONG><a name="[11b]"></a>disableAllFlyMode</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, flycontrolblock.o(i.disableAllFlyMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = disableAllFlyMode &rArr; disableBasicFlyMode &rArr; resetDataQuadcore &rArr; resetQuadCore &rArr; resetPIDWithNewSetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnableHoldPositionMode
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnableHoldAltitudeMode
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnableBasicFlyMode
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableHoldPositionMode
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableHoldAltitudeMode
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableBasicFlyMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOn
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOff
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
</UL>

<P><STRONG><a name="[11d]"></a>disableBasicFlyMode</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, basicflymode.o(i.disableBasicFlyMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = disableBasicFlyMode &rArr; resetDataQuadcore &rArr; resetQuadCore &rArr; resetPIDWithNewSetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetDataQuadcore
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableAllFlyMode
</UL>

<P><STRONG><a name="[dc]"></a>disableController</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, dronecontroller.o(i.disableController))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = disableController &rArr; disableSBusReader &rArr; disableUart
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSBusReader
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startCalibrate
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callFunctionEvadeInterrupt
</UL>

<P><STRONG><a name="[f7]"></a>disableDeltaTimeChecker</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, deltatimechecker.o(i.disableDeltaTimeChecker))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTimeWaitReponse
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOnControl
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOffControl
</UL>

<P><STRONG><a name="[124]"></a>disableHoldAltitude</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, holdaltitude.o(i.disableHoldAltitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disableHoldAltitude
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetPID
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetComplementeryFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableHoldAltitudeMode
</UL>

<P><STRONG><a name="[11f]"></a>disableHoldAltitudeMode</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, holdaltitudemode.o(i.disableHoldAltitudeMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = disableHoldAltitudeMode &rArr; disableHoldAltitude
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableHoldAltitude
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;holdPosition
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;holdAltitude
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fly
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableAllFlyMode
</UL>

<P><STRONG><a name="[121]"></a>disableHoldPositionMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, holdpositionmode.o(i.disableHoldPositionMode))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fly
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableAllFlyMode
</UL>

<P><STRONG><a name="[123]"></a>disableSBusReader</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sbusreader.o(i.disableSBusReader))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = disableSBusReader &rArr; disableUart
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableUart
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableController
</UL>

<P><STRONG><a name="[127]"></a>disableUart</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, uartcontrol.o(i.disableUart))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = disableUart
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findUSARTPointer
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSBusReader
</UL>

<P><STRONG><a name="[1b2]"></a>enableBasicFlyMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, basicflymode.o(i.enableBasicFlyMode))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBasicFlyMode
</UL>

<P><STRONG><a name="[de]"></a>enableController</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, dronecontroller.o(i.enableController))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = enableController &rArr; enableSBusReader &rArr; enableUart
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableSBusReader
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startCalibrate
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callFunctionEvadeInterrupt
</UL>

<P><STRONG><a name="[c9]"></a>enableHoldAltitudeMode</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, holdaltitudemode.o(i.enableHoldAltitudeMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = enableHoldAltitudeMode &rArr; setNewAltitudeSp
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAltitudeFromAltitudeBlock
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setNewAltitudeSp
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calNewThr
</UL>

<P><STRONG><a name="[12c]"></a>enableI2C</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, i2c.o(i.enableI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = enableI2C &rArr; TM_GPIO_Init &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGpioI2C
</UL>

<P><STRONG><a name="[12a]"></a>enableSBusReader</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sbusreader.o(i.enableSBusReader))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = enableSBusReader &rArr; enableUart
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableUart
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableController
</UL>

<P><STRONG><a name="[12d]"></a>enableUart</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, uartcontrol.o(i.enableUart))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = enableUart
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findUSARTPointer
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableSBusReader
</UL>

<P><STRONG><a name="[b7]"></a>expandBuffer</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, buffer.o(i.expandBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = expandBuffer &rArr; realloc &rArr; malloc &rArr; internal_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isBufferNull
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addBytesToBuffer
</UL>

<P><STRONG><a name="[a5]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[17a]"></a>findBuffer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uartinterrupt.o(i.findBuffer))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvicHandler
</UL>

<P><STRONG><a name="[128]"></a>findUSARTPointer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uartfinder.o(i.findUSARTPointer))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableUart
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableUart
</UL>

<P><STRONG><a name="[12f]"></a>fly</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, flycontrolblock.o(i.fly))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = fly &rArr; updateBasicFlyMode &rArr; updateDataToQuadCore &rArr; updateQuadCore &rArr; updatePidOnAxisDebug &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBasicFlyMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnableHoldPositionMode
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnableHoldAltitudeMode
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableHoldPositionMode
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableHoldAltitudeMode
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateFlyControlBlock
</UL>

<P><STRONG><a name="[131]"></a>getAccel</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, imublock.o(i.getAccel))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = getAccel &rArr; convertImuData &rArr; calibMagnetVector &rArr; calibMagnet
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertImuData
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateCalculator
</UL>

<P><STRONG><a name="[cb]"></a>getAltitudeFromAltitudeBlock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, altitudeblock_1.o(i.getAltitudeFromAltitudeBlock))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calNewThr
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableHoldAltitudeMode
</UL>

<P><STRONG><a name="[fc]"></a>getChannel1Value</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dronecontroller.o(i.getChannel1Value))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOnControl
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOffControl
</UL>

<P><STRONG><a name="[fb]"></a>getChannel2Value</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dronecontroller.o(i.getChannel2Value))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOnControl
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOffControl
</UL>

<P><STRONG><a name="[fa]"></a>getChannel3Value</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dronecontroller.o(i.getChannel3Value))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOnControl
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOffControl
</UL>

<P><STRONG><a name="[f9]"></a>getChannel4Value</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dronecontroller.o(i.getChannel4Value))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOnControl
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOffControl
</UL>

<P><STRONG><a name="[f1]"></a>getControlPitchValue</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dronecontroller.o(i.getControlPitchValue))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkHoldPositionControl
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateControlToQuadCore
</UL>

<P><STRONG><a name="[f0]"></a>getControlRollValue</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dronecontroller.o(i.getControlRollValue))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkHoldPositionControl
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateControlToQuadCore
</UL>

<P><STRONG><a name="[ca]"></a>getControlThrValue</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dronecontroller.o(i.getControlThrValue))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTakeOffControl
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkStartControl
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkHoldPositionControl
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkHoldAltitudeControl
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calNewThr
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getThrottle
</UL>

<P><STRONG><a name="[1b7]"></a>getControlYawValue</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dronecontroller.o(i.getControlYawValue))
<BR><BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateControlToQuadCore
</UL>

<P><STRONG><a name="[e1]"></a>getCurrentTime</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, tctime.o(i.getCurrentTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetFlagStatus
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCounterTimeMain
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetDeltaTimeChecker
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compareWithCurrentTime
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMicros
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePidOnAxisDebug
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeSetPointYaw
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeSetPointRoll
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeSetPointPitch
</UL>

<P><STRONG><a name="[1b8]"></a>getEuler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, eulerblock.o(i.getEuler))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDataToQuadCore
</UL>

<P><STRONG><a name="[136]"></a>getFlyAction</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, analystcontrol.o(i.getFlyAction))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = getFlyAction &rArr; checkHoldAllControl &rArr; checkHoldPositionControl
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOnControl
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOffControl
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTakeOffControl
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkStartControl
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkHoldPositionControl
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkHoldAltitudeControl
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkHoldAllControl
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateFlyControlBlock
</UL>

<P><STRONG><a name="[137]"></a>getGyro</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, imublock.o(i.getGyro))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = getGyro &rArr; convertImuData &rArr; calibMagnetVector &rArr; calibMagnet
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertImuData
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateCalculator
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;testGyroData
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDataToQuadCore
</UL>

<P><STRONG><a name="[c6]"></a>getGyroCalculateOffsetResult</STRONG> (Thumb, 62 bytes, Stack size 28 bytes, gyrooffsetcalculator.o(i.getGyroCalculateOffsetResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = getGyroCalculateOffsetResult
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calGyroOffset
</UL>

<P><STRONG><a name="[138]"></a>getGyroOffset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dronestore.o(i.getGyroOffset))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = getGyroOffset &rArr; readDataFromDroneStore &rArr; readGyroOffset &rArr; wrapBytesToInt16_tArray
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyInt16_tArray
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDataFromDroneStore
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGyroCalib
</UL>

<P><STRONG><a name="[9b]"></a>getListenerUartList</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, uarthandler.o(i.getListenerUartList))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;registerUartListener
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[13b]"></a>getMagnet</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, imublock.o(i.getMagnet))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = getMagnet &rArr; convertImuData &rArr; calibMagnetVector &rArr; calibMagnet
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertImuData
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateCalculator
</UL>

<P><STRONG><a name="[be]"></a>getMs5611Altitude</STRONG> (Thumb, 10 bytes, Stack size 16 bytes, barometerms5611.o(i.getMs5611Altitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getMs5611Altitude
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;altCalibGetSample
</UL>

<P><STRONG><a name="[199]"></a>getMs5611ReadPressureCommand</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, ms5611reader.o(i.getMs5611ReadPressureCommand))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestPressureMs5611
</UL>

<P><STRONG><a name="[19c]"></a>getMs5611ReadTempCommand</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, ms5611reader.o(i.getMs5611ReadTempCommand))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestTempMs5611
</UL>

<P><STRONG><a name="[13c]"></a>getNextAction</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, barometerms5611.o(i.getNextAction))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = getNextAction &rArr; checkTimeWaitReponse &rArr; checkDeltaTimeChecker &rArr; resetDeltaTimeChecker &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isRequestTemp
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTimeWaitReponse
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBarometerMs5611
</UL>

<P><STRONG><a name="[b8]"></a>getNumberEmptyBuffer</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, buffer.o(i.getNumberEmptyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = getNumberEmptyBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isBufferNull
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addBytesToBuffer
</UL>

<P><STRONG><a name="[113]"></a>getRawAccel</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, mpu9250reader.o(i.getRawAccel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getRawAccel
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertImuData
</UL>

<P><STRONG><a name="[c4]"></a>getRawGyro</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mpu9250reader.o(i.getRawGyro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getRawGyro
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertImuData
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calGyroOffset
</UL>

<P><STRONG><a name="[114]"></a>getRawMagnet</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, mpu9250reader.o(i.getRawMagnet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getRawMagnet
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertImuData
</UL>

<P><STRONG><a name="[cc]"></a>getRealAccelZ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, imublock.o(i.getRealAccelZ))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calNewThr
</UL>

<P><STRONG><a name="[13e]"></a>getThrottle</STRONG> (Thumb, 64 bytes, Stack size 56 bytes, generalfly.o(i.getThrottle))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = getThrottle
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getControlThrValue
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldPositionMode
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBasicFlyMode
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
</UL>

<P><STRONG><a name="[13f]"></a>holdAll</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, flycontrolblock.o(i.holdAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = holdAll &rArr; updateHoldPositionModeWithThr &rArr; updateDataToQuadCore &rArr; updateQuadCore &rArr; updatePidOnAxisDebug &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldPositionModeWithThr
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldAltitudeModeWithOutPwm
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateFlyControlBlock
</UL>

<P><STRONG><a name="[142]"></a>holdAltitude</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flycontrolblock.o(i.holdAltitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = holdAltitude &rArr; updateHoldAltitudeMode &rArr; updateDataToQuadCore &rArr; updateQuadCore &rArr; updatePidOnAxisDebug &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldAltitudeMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnableHoldPositionMode
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableHoldAltitudeMode
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateFlyControlBlock
</UL>

<P><STRONG><a name="[144]"></a>holdPosition</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flycontrolblock.o(i.holdPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = holdPosition &rArr; updateHoldPositionMode &rArr; updateHoldPositionModeWithThr &rArr; updateDataToQuadCore &rArr; updateQuadCore &rArr; updatePidOnAxisDebug &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldPositionMode
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnableHoldAltitudeMode
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableHoldAltitudeMode
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateFlyControlBlock
</UL>

<P><STRONG><a name="[146]"></a>initAltitudeCalibraionProgram</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, altitudecalibrationprogram.o(i.initAltitudeCalibraionProgram))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = initAltitudeCalibraionProgram &rArr; initBarometerMs5611 &rArr; updateBarometerMs5611 &rArr; readTempFromMs5611 &rArr; updateTempAndPressureMs5611Calculator &rArr; calculateAltitude &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBarometerMs5611
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startCalibrate
</UL>

<P><STRONG><a name="[147]"></a>initBarometerMs5611</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, barometerms5611.o(i.initBarometerMs5611))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = initBarometerMs5611 &rArr; updateBarometerMs5611 &rArr; readTempFromMs5611 &rArr; updateTempAndPressureMs5611Calculator &rArr; calculateAltitude &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMs5611Reader
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMs5611Calculator
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBarometerMs5611
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetMs5611
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEprom
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapQualityToOSR
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initAltitudeCalibraionProgram
</UL>

<P><STRONG><a name="[14d]"></a>initBuffer</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, buffer.o(i.initBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = initBuffer &rArr; malloc &rArr; internal_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart6NVIC
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart4NVIC
</UL>

<P><STRONG><a name="[132]"></a>initCounterTimeMain</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, tctime.o(i.initCounterTimeMain))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentTime
</UL>

<P><STRONG><a name="[f5]"></a>initDeltaTimeChecker</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, deltatimechecker.o(i.initDeltaTimeChecker))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = initDeltaTimeChecker &rArr; resetDeltaTimeChecker &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetDeltaTimeChecker
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTimeAccuracy
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitTempResultFromMs5611
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitPressureResultFromMs5611
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initEulerBlock
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUp
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset
</UL>

<P><STRONG><a name="[150]"></a>initDroneController</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, dronecontroller.o(i.initDroneController))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = initDroneController &rArr; initSBusReader &rArr; initUartWithNVIC &rArr; initUart6NVIC &rArr; configUart6 &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSBusReader
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUp
</UL>

<P><STRONG><a name="[152]"></a>initEulerBlock</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, eulerblock.o(i.initEulerBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = initEulerBlock &rArr; initDeltaTimeChecker &rArr; resetDeltaTimeChecker &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDeltaTimeChecker
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initEulerCalculator
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUp
</UL>

<P><STRONG><a name="[153]"></a>initEulerCalculator</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, eulercalculator.o(i.initEulerCalculator))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initEulerBlock
</UL>

<P><STRONG><a name="[154]"></a>initGpioI2C</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, i2c.o(i.initGpioI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = initGpioI2C &rArr; enableI2C &rArr; TM_GPIO_Init &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initI2C
</UL>

<P><STRONG><a name="[155]"></a>initGyroCalib</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, imublock.o(i.initGyroCalib))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = initGyroCalib &rArr; getGyroOffset &rArr; readDataFromDroneStore &rArr; readGyroOffset &rArr; wrapBytesToInt16_tArray
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertArrayToVector3DInt16
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initImuCalibrator
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGyroOffset
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetImuBlock
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initImuBlock
</UL>

<P><STRONG><a name="[158]"></a>initGyroCalibrationProgram</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gyrocalibrationprogram.o(i.initGyroCalibrationProgram))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = initGyroCalibrationProgram &rArr; initMpu9250Reader &rArr; configGeneral &rArr; catchErrorMpu9250 &rArr; TM_MPU9250_Init &rArr; TM_I2C_Init &rArr; TM_I2C3_INT_InitPins &rArr; TM_GPIO_InitAlternate &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGyroOffsetCalculator
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMpu9250Reader
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startCalibrate
</UL>

<P><STRONG><a name="[159]"></a>initGyroOffsetCalculator</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gyrooffsetcalculator.o(i.initGyroOffsetCalculator))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGyroCalibrationProgram
</UL>

<P><STRONG><a name="[15b]"></a>initI2C</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, i2c.o(i.initI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = initI2C &rArr; initGpioI2C &rArr; enableI2C &rArr; TM_GPIO_Init &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initI2C2
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGpioI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUp
</UL>

<P><STRONG><a name="[15c]"></a>initI2C2</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, i2c.o(i.initI2C2))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = initI2C2 &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initI2C
</UL>

<P><STRONG><a name="[15e]"></a>initImuBlock</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, imublock.o(i.initImuBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = initImuBlock &rArr; initImuReader &rArr; initMpu9250Reader &rArr; configGeneral &rArr; catchErrorMpu9250 &rArr; TM_MPU9250_Init &rArr; TM_I2C_Init &rArr; TM_I2C3_INT_InitPins &rArr; TM_GPIO_InitAlternate &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initImuReader
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGyroCalib
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUp
</UL>

<P><STRONG><a name="[157]"></a>initImuCalibrator</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, imucalibrate.o(i.initImuCalibrator))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = initImuCalibrator
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGyroCalib
</UL>

<P><STRONG><a name="[15f]"></a>initImuReader</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, imublock.o(i.initImuReader))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = initImuReader &rArr; initMpu9250Reader &rArr; configGeneral &rArr; catchErrorMpu9250 &rArr; TM_MPU9250_Init &rArr; TM_I2C_Init &rArr; TM_I2C3_INT_InitPins &rArr; TM_GPIO_InitAlternate &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMpu9250Reader
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initImuBlock
</UL>

<P><STRONG><a name="[160]"></a>initMotorControlBlock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, motorcontrolblock.o(i.initMotorControlBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = initMotorControlBlock &rArr; initMotorPwms &rArr; TIM_OC2Init
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorTimer
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorPwms
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorOutGpio
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUp
</UL>

<P><STRONG><a name="[161]"></a>initMotorOutGpio</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, motorcontrolblock.o(i.initMotorOutGpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = initMotorOutGpio &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorControlBlock
</UL>

<P><STRONG><a name="[163]"></a>initMotorPwms</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, motorcontrolblock.o(i.initMotorPwms))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = initMotorPwms &rArr; TIM_OC2Init
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PreloadConfig
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertEscControlToCompareVal
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorControlBlock
</UL>

<P><STRONG><a name="[162]"></a>initMotorTimer</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, motorcontrolblock.o(i.initMotorTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = initMotorTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorControlBlock
</UL>

<P><STRONG><a name="[15a]"></a>initMpu9250Reader</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, mpu9250reader.o(i.initMpu9250Reader))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = initMpu9250Reader &rArr; configGeneral &rArr; catchErrorMpu9250 &rArr; TM_MPU9250_Init &rArr; TM_I2C_Init &rArr; TM_I2C3_INT_InitPins &rArr; TM_GPIO_InitAlternate &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configGeneral
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initImuReader
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGyroCalibrationProgram
</UL>

<P><STRONG><a name="[14a]"></a>initMs5611Calculator</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ms5611calculator.o(i.initMs5611Calculator))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBarometerMs5611
</UL>

<P><STRONG><a name="[14c]"></a>initMs5611Reader</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ms5611reader.o(i.initMs5611Reader))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBarometerMs5611
</UL>

<P><STRONG><a name="[151]"></a>initSBusReader</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sbusreader.o(i.initSBusReader))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = initSBusReader &rArr; initUartWithNVIC &rArr; initUart6NVIC &rArr; configUart6 &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUartWithNVIC
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDroneController
</UL>

<P><STRONG><a name="[170]"></a>initUart4NVIC</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, uartinterrupt.o(i.initUart4NVIC))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = initUart4NVIC &rArr; configUart4 &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUartNVIC
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;registerUartListener
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUart4
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUartWithNVIC
</UL>

<P><STRONG><a name="[172]"></a>initUart6NVIC</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, uartinterrupt.o(i.initUart6NVIC))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = initUart6NVIC &rArr; configUart6 &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUartNVIC
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;registerUartListener
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configUart6
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUartWithNVIC
</UL>

<P><STRONG><a name="[16f]"></a>initUartWithNVIC</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, uartcontrol.o(i.initUartWithNVIC))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = initUartWithNVIC &rArr; initUart6NVIC &rArr; configUart6 &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart6NVIC
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart4NVIC
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSBusReader
</UL>

<P><STRONG><a name="[1be]"></a>invSqrt</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, eulercalculator.o(i.invSqrt))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateImuCalculatorWithOutHeading
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateImuCalculator
</UL>

<P><STRONG><a name="[17b]"></a>isBufferFull</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, buffer.o(i.isBufferFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isBufferFull
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvicHandler
</UL>

<P><STRONG><a name="[b6]"></a>isBufferNull</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, buffer.o(i.isBufferNull))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearBuffer
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNumberEmptyBuffer
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expandBuffer
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addBytesToBuffer
</UL>

<P><STRONG><a name="[11c]"></a>isEnableBasicFlyMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basicflymode.o(i.isEnableBasicFlyMode))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBasicFlyMode
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableAllFlyMode
</UL>

<P><STRONG><a name="[e9]"></a>isEnableDeltaTimeChecker</STRONG> (Thumb, 6 bytes, Stack size 16 bytes, deltatimechecker.o(i.isEnableDeltaTimeChecker))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isEnableDeltaTimeChecker
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTimeAccuracy
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDeltaTimeChecker
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitTempResultFromMs5611
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitPressureResultFromMs5611
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOnControl
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOffControl
</UL>

<P><STRONG><a name="[11e]"></a>isEnableHoldAltitudeMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, holdaltitudemode.o(i.isEnableHoldAltitudeMode))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;holdPosition
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fly
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableAllFlyMode
</UL>

<P><STRONG><a name="[120]"></a>isEnableHoldPositionMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, holdpositionmode.o(i.isEnableHoldPositionMode))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;holdAltitude
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fly
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableAllFlyMode
</UL>

<P><STRONG><a name="[1a6]"></a>isInitAltitudeBlock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, altitudeblock_1.o(i.isInitAltitudeBlock))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startCalibrate
</UL>

<P><STRONG><a name="[ff]"></a>isQuadOff</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, analystcontrol.o(i.isQuadOff))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOnControl
</UL>

<P><STRONG><a name="[ef]"></a>isQuadOn</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, analystcontrol.o(i.isQuadOn))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTurnOffControl
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkTakeOffControl
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkStartControl
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkHoldPositionControl
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkHoldAltitudeControl
</UL>

<P><STRONG><a name="[13d]"></a>isRequestTemp</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, barometerms5611.o(i.isRequestTemp))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNextAction
</UL>

<P><STRONG><a name="[e6]"></a>isRunCalibrateProgram</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dronecontroller.o(i.isRunCalibrateProgram))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkAndStartCalibrate
</UL>

<P><STRONG><a name="[173]"></a>loop</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, main.o(i.loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = loop &rArr; updateEulerBlock &rArr; updateCalculator &rArr; updateImuCalculator &rArr; updateImuCalculatorWithOutHeading &rArr; quaternionToDegEuler &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDeltaTimeChecker
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateEulerBlock
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;testGyroData
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkAndStartCalibrate
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callFunctionEvadeInterrupt
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateMotorControlBlock
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateFlyControlBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>main</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = main &rArr; loop &rArr; updateEulerBlock &rArr; updateCalculator &rArr; updateImuCalculator &rArr; updateImuCalculatorWithOutHeading &rArr; quaternionToDegEuler &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startCalibrate
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUp
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[14b]"></a>mapQualityToOSR</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, barometerms5611.o(i.mapQualityToOSR))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBarometerMs5611
</UL>

<P><STRONG><a name="[111]"></a>normaliseVector3D</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, vector3d.o(i.normaliseVector3D))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = normaliseVector3D &rArr; scaleVector3D
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scaleVector3D
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertData
</UL>

<P><STRONG><a name="[67]"></a>nvicHandler</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, uartinterrupt.o(i.nvicHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = nvicHandler &rArr; addByteToBuffer &rArr; addBytesToBuffer &rArr; expandBuffer &rArr; realloc &rArr; malloc &rArr; internal_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findBuffer
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isBufferFull
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearBuffer
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addByteToBuffer
</UL>
<BR>[Address Reference Count : 2]<UL><LI> uartinterrupt.o(i.initUart4NVIC)
<LI> uartinterrupt.o(i.initUart6NVIC)
</UL>
<P><STRONG><a name="[17c]"></a>parseData</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, mpu9250reader.o(i.parseData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = parseData &rArr; TM_MPU9250_ReadMag &rArr; TM_I2C_ReadMulti &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_MPU9250_ReadMag
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFullDataMpu9250
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readAccelAndGyroDataMpu9250
</UL>

<P><STRONG><a name="[17d]"></a>quaternionToDegEuler</STRONG> (Thumb, 384 bytes, Stack size 72 bytes, eulercalculator.o(i.quaternionToDegEuler))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = quaternionToDegEuler &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scaleVector3D
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateImuCalculatorWithOutHeading
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateImuCalculator
</UL>

<P><STRONG><a name="[c3]"></a>readAccelAndGyroDataMpu9250</STRONG> (Thumb, 46 bytes, Stack size 56 bytes, mpu9250reader.o(i.readAccelAndGyroDataMpu9250))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = readAccelAndGyroDataMpu9250 &rArr; parseData &rArr; TM_MPU9250_ReadMag &rArr; TM_I2C_ReadMulti &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestAccelAndGyro
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseData
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calGyroOffset
</UL>

<P><STRONG><a name="[17f]"></a>readAccelOffset</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dronestore.o(i.readAccelOffset))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = readAccelOffset &rArr; wrapBytesToInt16_tArray
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFromFlash
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrapBytesToInt16_tArray
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDataFromDroneStore
</UL>

<P><STRONG><a name="[182]"></a>readBytesViaI2C</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, i2c.o(i.readBytesViaI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = readBytesViaI2C &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopI2C
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestAndReadBytesViaI2C
</UL>

<P><STRONG><a name="[139]"></a>readDataFromDroneStore</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dronestore.o(i.readDataFromDroneStore))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = readDataFromDroneStore &rArr; readGyroOffset &rArr; wrapBytesToInt16_tArray
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readGyroOffset
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readAccelOffset
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGyroOffset
</UL>

<P><STRONG><a name="[188]"></a>readElementEprom</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ms5611epromreader.o(i.readElementEprom))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = readElementEprom &rArr; requestAndReadBytesViaI2C &rArr; requestI2C &rArr; writeBytesWithOutRegViaI2c &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestAndReadBytesViaI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readMs5611Eprom
</UL>

<P><STRONG><a name="[149]"></a>readEprom</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, barometerms5611.o(i.readEprom))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = readEprom &rArr; readMs5611Eprom &rArr; readElementEprom &rArr; requestAndReadBytesViaI2C &rArr; requestI2C &rArr; writeBytesWithOutRegViaI2c &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readMs5611Eprom
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyMs5611Eprom
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBarometerMs5611
</UL>

<P><STRONG><a name="[180]"></a>readFromFlash</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, flashreader.o(i.readFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = readFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readGyroOffset
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readAccelOffset
</UL>

<P><STRONG><a name="[18c]"></a>readFullDataMpu9250</STRONG> (Thumb, 74 bytes, Stack size 64 bytes, mpu9250reader.o(i.readFullDataMpu9250))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = readFullDataMpu9250 &rArr; parseData &rArr; TM_MPU9250_ReadMag &rArr; TM_I2C_ReadMulti &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestMagnet
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestAccelAndGyro
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseData
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateImuBlock
</UL>

<P><STRONG><a name="[187]"></a>readGyroOffset</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dronestore.o(i.readGyroOffset))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = readGyroOffset &rArr; wrapBytesToInt16_tArray
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFromFlash
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrapBytesToInt16_tArray
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDataFromDroneStore
</UL>

<P><STRONG><a name="[18a]"></a>readMs5611Eprom</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ms5611epromreader.o(i.readMs5611Eprom))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = readMs5611Eprom &rArr; readElementEprom &rArr; requestAndReadBytesViaI2C &rArr; requestI2C &rArr; writeBytesWithOutRegViaI2c &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readElementEprom
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readEprom
</UL>

<P><STRONG><a name="[18e]"></a>readPressureFromMs5611</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, barometerms5611.o(i.readPressureFromMs5611))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = readPressureFromMs5611 &rArr; updateTempAndPressureMs5611Calculator &rArr; calculateAltitude &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateTempAndPressureMs5611Calculator
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPressureMs5611
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBarometerMs5611
</UL>

<P><STRONG><a name="[18f]"></a>readPressureMs5611</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ms5611reader.o(i.readPressureMs5611))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = readPressureMs5611 &rArr; requestAndReadBytesViaI2C &rArr; requestI2C &rArr; writeBytesWithOutRegViaI2c &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestAndReadBytesViaI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPressureFromMs5611
</UL>

<P><STRONG><a name="[191]"></a>readTempFromMs5611</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, barometerms5611.o(i.readTempFromMs5611))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = readTempFromMs5611 &rArr; updateTempAndPressureMs5611Calculator &rArr; calculateAltitude &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateTempAndPressureMs5611Calculator
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readTempMs5611
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBarometerMs5611
</UL>

<P><STRONG><a name="[192]"></a>readTempMs5611</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ms5611reader.o(i.readTempMs5611))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = readTempMs5611 &rArr; requestAndReadBytesViaI2C &rArr; requestI2C &rArr; writeBytesWithOutRegViaI2c &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestAndReadBytesViaI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readTempFromMs5611
</UL>

<P><STRONG><a name="[12e]"></a>realloc</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, mallocr.o(i.realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = realloc &rArr; malloc &rArr; internal_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expandBuffer
</UL>

<P><STRONG><a name="[171]"></a>registerUartListener</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, uarthandler.o(i.registerUartListener))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = registerUartListener &rArr; copyUartListener
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getListenerUartList
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyUartListener
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart6NVIC
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUart4NVIC
</UL>

<P><STRONG><a name="[b9]"></a>removeBytesInBuffer</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, buffer.o(i.removeBytesInBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = removeBytesInBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addBytesToBuffer
</UL>

<P><STRONG><a name="[17e]"></a>requestAccelAndGyro</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, mpu9250reader.o(i.requestAccelAndGyro))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = requestAccelAndGyro &rArr; TM_MPU9250_ReadGyro &rArr; TM_I2C_ReadMulti &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyData
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_MPU9250_ReadGyro
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_MPU9250_ReadAcce
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFullDataMpu9250
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readAccelAndGyroDataMpu9250
</UL>

<P><STRONG><a name="[189]"></a>requestAndReadBytesViaI2C</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, i2c.o(i.requestAndReadBytesViaI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = requestAndReadBytesViaI2C &rArr; requestI2C &rArr; writeBytesWithOutRegViaI2c &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestI2C
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBytesViaI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readElementEprom
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readTempMs5611
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPressureMs5611
</UL>

<P><STRONG><a name="[195]"></a>requestI2C</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, i2c.o(i.requestI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = requestI2C &rArr; writeBytesWithOutRegViaI2c &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeBytesWithOutRegViaI2c
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestAndReadBytesViaI2C
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestTempMs5611
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestPressureMs5611
</UL>

<P><STRONG><a name="[18d]"></a>requestMagnet</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, mpu9250reader.o(i.requestMagnet))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = requestMagnet &rArr; TM_MPU9250_ReadMag &rArr; TM_I2C_ReadMulti &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyData
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_MPU9250_ReadMag
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFullDataMpu9250
</UL>

<P><STRONG><a name="[197]"></a>requestPressureFromMs5611</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, barometerms5611.o(i.requestPressureFromMs5611))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = requestPressureFromMs5611 &rArr; requestPressureMs5611 &rArr; requestI2C &rArr; writeBytesWithOutRegViaI2c &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestPressureMs5611
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBarometerMs5611
</UL>

<P><STRONG><a name="[198]"></a>requestPressureMs5611</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, ms5611reader.o(i.requestPressureMs5611))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = requestPressureMs5611 &rArr; requestI2C &rArr; writeBytesWithOutRegViaI2c &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestI2C
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMs5611ReadPressureCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestPressureFromMs5611
</UL>

<P><STRONG><a name="[19a]"></a>requestTempFromMs5611</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, barometerms5611.o(i.requestTempFromMs5611))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = requestTempFromMs5611 &rArr; requestTempMs5611 &rArr; requestI2C &rArr; writeBytesWithOutRegViaI2c &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestTempMs5611
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBarometerMs5611
</UL>

<P><STRONG><a name="[19b]"></a>requestTempMs5611</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, ms5611reader.o(i.requestTempMs5611))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = requestTempMs5611 &rArr; requestI2C &rArr; writeBytesWithOutRegViaI2c &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestI2C
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMs5611ReadTempCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestTempFromMs5611
</UL>

<P><STRONG><a name="[179]"></a>reset</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = reset &rArr; resetImuBlock &rArr; initGyroCalib &rArr; getGyroOffset &rArr; readDataFromDroneStore &rArr; readGyroOffset &rArr; wrapBytesToInt16_tArray
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDeltaTimeChecker
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetImuBlock
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetController
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[125]"></a>resetComplementeryFilter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, complementeryfilter.o(i.resetComplementeryFilter))
<BR><BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetQuadCore
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableHoldAltitude
</UL>

<P><STRONG><a name="[19d]"></a>resetController</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dronecontroller.o(i.resetController))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset
</UL>

<P><STRONG><a name="[122]"></a>resetDataQuadcore</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, generalfly.o(i.resetDataQuadcore))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = resetDataQuadcore &rArr; resetQuadCore &rArr; resetPIDWithNewSetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetQuadCore
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableBasicFlyMode
</UL>

<P><STRONG><a name="[eb]"></a>resetDeltaTimeChecker</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, deltatimechecker.o(i.resetDeltaTimeChecker))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = resetDeltaTimeChecker &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentTime
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDeltaTimeChecker
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDeltaTimeChecker
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateEulerBlock
</UL>

<P><STRONG><a name="[d3]"></a>resetFloatArray</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arrayutil.o(i.resetFloatArray))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculatePwm
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOn
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOff
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
</UL>

<P><STRONG><a name="[19e]"></a>resetImuBlock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, imublock.o(i.resetImuBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = resetImuBlock &rArr; initGyroCalib &rArr; getGyroOffset &rArr; readDataFromDroneStore &rArr; readGyroOffset &rArr; wrapBytesToInt16_tArray
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGyroCalib
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset
</UL>

<P><STRONG><a name="[148]"></a>resetMs5611</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, barometerms5611.o(i.resetMs5611))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = resetMs5611 &rArr; writeByteWithOutRegViaI2c &rArr; writeBytesWithOutRegViaI2c &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeByteWithOutRegViaI2c
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMilis
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBarometerMs5611
</UL>

<P><STRONG><a name="[126]"></a>resetPID</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, pid.o(i.resetPID))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetPIDWithNewSetPoint
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableHoldAltitude
</UL>

<P><STRONG><a name="[1a1]"></a>resetPIDWithNewSetPoint</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, pid.o(i.resetPIDWithNewSetPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = resetPIDWithNewSetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetPID
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetQuadCore
</UL>

<P><STRONG><a name="[19f]"></a>resetQuadCore</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, quadcore.o(i.resetQuadCore))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = resetQuadCore &rArr; resetPIDWithNewSetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetPIDWithNewSetPoint
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetComplementeryFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetDataQuadcore
</UL>

<P><STRONG><a name="[110]"></a>scaleVector3D</STRONG> (Thumb, 58 bytes, Stack size 28 bytes, vector3d.o(i.scaleVector3D))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = scaleVector3D
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaliseVector3D
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quaternionToDegEuler
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertData
</UL>

<P><STRONG><a name="[118]"></a>scaleVector3DIntToVector3D</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, vector3d.o(i.scaleVector3DIntToVector3D))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = scaleVector3DIntToVector3D
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertRawMagnetToRealMagnet
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertRawGyroToRealGyro
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertRawAccelToRealAccel
</UL>

<P><STRONG><a name="[12b]"></a>setNewAltitudeSp</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, holdaltitude.o(i.setNewAltitudeSp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setNewAltitudeSp
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableHoldAltitudeMode
</UL>

<P><STRONG><a name="[e2]"></a>setSetPoint</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pid.o(i.setSetPoint))
<BR><BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePidOnAxisDebug
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeSetPointYaw
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeSetPointRoll
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeSetPointPitch
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setNewAltitudeSp
</UL>

<P><STRONG><a name="[178]"></a>setUp</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, main.o(i.setUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = setUp &rArr; initImuBlock &rArr; initImuReader &rArr; initMpu9250Reader &rArr; configGeneral &rArr; catchErrorMpu9250 &rArr; TM_MPU9250_Init &rArr; TM_I2C_Init &rArr; TM_I2C3_INT_InitPins &rArr; TM_GPIO_InitAlternate &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initI2C
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDeltaTimeChecker
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMilis
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initImuBlock
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initEulerBlock
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDroneController
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotorControlBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[1a2]"></a>start</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, flycontrolblock.o(i.start))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = start &rArr; getThrottle
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetFloatArray
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getThrottle
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableAllFlyMode
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateFlyControlBlock
</UL>

<P><STRONG><a name="[1a3]"></a>startAltitudeCalibrationProgram</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, altitudecalibrationprogram.o(i.startAltitudeCalibrationProgram))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = startAltitudeCalibrationProgram &rArr; altCalibGetSample &rArr; updateBarometerMs5611 &rArr; readTempFromMs5611 &rArr; updateTempAndPressureMs5611Calculator &rArr; calculateAltitude &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeAltitudeOffset
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;altCalibGetSample
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startCalibrate
</UL>

<P><STRONG><a name="[e7]"></a>startCalibrate</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.startCalibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = startCalibrate &rArr; startAltitudeCalibrationProgram &rArr; altCalibGetSample &rArr; updateBarometerMs5611 &rArr; readTempFromMs5611 &rArr; updateTempAndPressureMs5611Calculator &rArr; calculateAltitude &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isInitAltitudeBlock
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableController
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableController
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startGyroCalibrationProgram
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGyroCalibrationProgram
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startAltitudeCalibrationProgram
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initAltitudeCalibraionProgram
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkAndStartCalibrate
</UL>

<P><STRONG><a name="[1a5]"></a>startGyroCalibrationProgram</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gyrocalibrationprogram.o(i.startGyroCalibrationProgram))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = startGyroCalibrationProgram &rArr; calGyroOffset &rArr; readAccelAndGyroDataMpu9250 &rArr; parseData &rArr; TM_MPU9250_ReadMag &rArr; TM_I2C_ReadMulti &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertVector3DInt16ToArray
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeGyroOffset
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calGyroOffset
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startCalibrate
</UL>

<P><STRONG><a name="[183]"></a>startI2C</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, i2c.o(i.startI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeBytesWithOutRegViaI2c
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBytesViaI2C
</UL>

<P><STRONG><a name="[185]"></a>stopI2C</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, i2c.o(i.stopI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = stopI2C
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeBytesWithOutRegViaI2c
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBytesViaI2C
</UL>

<P><STRONG><a name="[da]"></a>subVector3D16</STRONG> (Thumb, 68 bytes, Stack size 28 bytes, vector3d.o(i.subVector3D16))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = subVector3D16
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibrate
</UL>

<P><STRONG><a name="[1ad]"></a>sumPID</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, pid.o(i.sumPID))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;constraintFloatValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateErrorPID
</UL>

<P><STRONG><a name="[174]"></a>testGyroData</STRONG> (Thumb, 328 bytes, Stack size 40 bytes, main.o(i.testGyroData))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = testGyroData &rArr; getGyro &rArr; convertImuData &rArr; calibMagnetVector &rArr; calibMagnet
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGyro
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
</UL>

<P><STRONG><a name="[1ae]"></a>turnOff</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flycontrolblock.o(i.turnOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = turnOff &rArr; disableAllFlyMode &rArr; disableBasicFlyMode &rArr; resetDataQuadcore &rArr; resetQuadCore &rArr; resetPIDWithNewSetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetFloatArray
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableAllFlyMode
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateFlyControlBlock
</UL>

<P><STRONG><a name="[1af]"></a>turnOn</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flycontrolblock.o(i.turnOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = turnOn &rArr; disableAllFlyMode &rArr; disableBasicFlyMode &rArr; resetDataQuadcore &rArr; resetQuadCore &rArr; resetPIDWithNewSetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetFloatArray
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableAllFlyMode
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateFlyControlBlock
</UL>

<P><STRONG><a name="[bc]"></a>updateBarometerMs5611</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, barometerms5611.o(i.updateBarometerMs5611))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = updateBarometerMs5611 &rArr; readTempFromMs5611 &rArr; updateTempAndPressureMs5611Calculator &rArr; calculateAltitude &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitTempResultFromMs5611
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitPressureResultFromMs5611
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestTempFromMs5611
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestPressureFromMs5611
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readTempFromMs5611
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPressureFromMs5611
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNextAction
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initBarometerMs5611
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;altCalibGetSample
</UL>

<P><STRONG><a name="[130]"></a>updateBasicFlyMode</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, basicflymode.o(i.updateBasicFlyMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = updateBasicFlyMode &rArr; updateDataToQuadCore &rArr; updateQuadCore &rArr; updatePidOnAxisDebug &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableBasicFlyMode
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDataToQuadCore
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateControlToQuadCore
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculatePwm
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnableBasicFlyMode
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getThrottle
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fly
</UL>

<P><STRONG><a name="[1b5]"></a>updateCalculator</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, eulerblock.o(i.updateCalculator))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = updateCalculator &rArr; updateImuCalculator &rArr; updateImuCalculatorWithOutHeading &rArr; quaternionToDegEuler &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateImuCalculator
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMagnet
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGyro
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAccel
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateEulerBlock
</UL>

<P><STRONG><a name="[1c4]"></a>updateComplementeryFilter</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, complementeryfilter.o(i.updateComplementeryFilter))
<BR><BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePidOnAxisDebug
</UL>

<P><STRONG><a name="[1b3]"></a>updateControlToQuadCore</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, generalfly.o(i.updateControlToQuadCore))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = updateControlToQuadCore &rArr; changeSetPointYaw &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getControlYawValue
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getControlRollValue
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getControlPitchValue
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeSetPointYaw
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeSetPointRoll
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeSetPointPitch
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldAltitudeMode
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBasicFlyMode
</UL>

<P><STRONG><a name="[1b4]"></a>updateDataToQuadCore</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, generalfly.o(i.updateDataToQuadCore))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = updateDataToQuadCore &rArr; updateQuadCore &rArr; updatePidOnAxisDebug &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGyro
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getEuler
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateQuadCore
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldPositionModeWithThr
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldAltitudeMode
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBasicFlyMode
</UL>

<P><STRONG><a name="[1ba]"></a>updateErrorPID</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, pid.o(i.updateErrorPID))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;constraintFloatValue
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sumPID
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calP
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calI
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calD
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePID
</UL>

<P><STRONG><a name="[175]"></a>updateEulerBlock</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, eulerblock.o(i.updateEulerBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = updateEulerBlock &rArr; updateCalculator &rArr; updateImuCalculator &rArr; updateImuCalculatorWithOutHeading &rArr; quaternionToDegEuler &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetDeltaTimeChecker
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateCalculator
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
</UL>

<P><STRONG><a name="[176]"></a>updateFlyControlBlock</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, flycontrolblock.o(i.updateFlyControlBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = updateFlyControlBlock &rArr; holdPosition &rArr; updateHoldPositionMode &rArr; updateHoldPositionModeWithThr &rArr; updateDataToQuadCore &rArr; updateQuadCore &rArr; updatePidOnAxisDebug &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFlyAction
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateQuadState
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOn
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turnOff
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;holdPosition
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;holdAltitude
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;holdAll
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fly
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
</UL>

<P><STRONG><a name="[cd]"></a>updateHoldAltitude</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, holdaltitude.o(i.updateHoldAltitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = updateHoldAltitude &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePID
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calNewThr
</UL>

<P><STRONG><a name="[143]"></a>updateHoldAltitudeMode</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, holdaltitudemode.o(i.updateHoldAltitudeMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = updateHoldAltitudeMode &rArr; updateDataToQuadCore &rArr; updateQuadCore &rArr; updatePidOnAxisDebug &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDataToQuadCore
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateControlToQuadCore
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculatePwm
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calNewThr
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;holdAltitude
</UL>

<P><STRONG><a name="[140]"></a>updateHoldAltitudeModeWithOutPwm</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, holdaltitudemode.o(i.updateHoldAltitudeModeWithOutPwm))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = updateHoldAltitudeModeWithOutPwm &rArr; calNewThr &rArr; updateHoldAltitude &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calNewThr
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;holdAll
</UL>

<P><STRONG><a name="[145]"></a>updateHoldPositionMode</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, holdpositionmode.o(i.updateHoldPositionMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = updateHoldPositionMode &rArr; updateHoldPositionModeWithThr &rArr; updateDataToQuadCore &rArr; updateQuadCore &rArr; updatePidOnAxisDebug &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldPositionModeWithThr
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getThrottle
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;holdPosition
</UL>

<P><STRONG><a name="[141]"></a>updateHoldPositionModeWithThr</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, holdpositionmode.o(i.updateHoldPositionModeWithThr))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = updateHoldPositionModeWithThr &rArr; updateDataToQuadCore &rArr; updateQuadCore &rArr; updatePidOnAxisDebug &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDataToQuadCore
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculatePwm
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldPositionMode
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;holdAll
</UL>

<P><STRONG><a name="[dd]"></a>updateImuBlock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, imublock.o(i.updateImuBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = updateImuBlock &rArr; readFullDataMpu9250 &rArr; parseData &rArr; TM_MPU9250_ReadMag &rArr; TM_I2C_ReadMulti &rArr; TM_I2C_Start &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFullDataMpu9250
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callFunctionEvadeInterrupt
</UL>

<P><STRONG><a name="[1b6]"></a>updateImuCalculator</STRONG> (Thumb, 1380 bytes, Stack size 280 bytes, eulercalculator.o(i.updateImuCalculator))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = updateImuCalculator &rArr; updateImuCalculatorWithOutHeading &rArr; quaternionToDegEuler &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateImuCalculatorWithOutHeading
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quaternionToDegEuler
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSqrt
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertData
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateCalculator
</UL>

<P><STRONG><a name="[1bd]"></a>updateImuCalculatorWithOutHeading</STRONG> (Thumb, 818 bytes, Stack size 88 bytes, eulercalculator.o(i.updateImuCalculatorWithOutHeading))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = updateImuCalculatorWithOutHeading &rArr; quaternionToDegEuler &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quaternionToDegEuler
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateImuCalculator
</UL>

<P><STRONG><a name="[177]"></a>updateMotorControlBlock</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, motorcontrolblock.o(i.updateMotorControlBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = updateMotorControlBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convertEscControlToCompareVal
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop
</UL>

<P><STRONG><a name="[1bc]"></a>updatePID</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, pid.o(i.updatePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateErrorPID
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calE
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePidOnAxisDebug
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateHoldAltitude
</UL>

<P><STRONG><a name="[1c3]"></a>updatePidOnAxisDebug</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, quadcore.o(i.updatePidOnAxisDebug))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = updatePidOnAxisDebug &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentTime
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePID
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSetPoint
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateComplementeryFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateQuadCore
</UL>

<P><STRONG><a name="[1b9]"></a>updateQuadCore</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, quadcore.o(i.updateQuadCore))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = updateQuadCore &rArr; updatePidOnAxisDebug &rArr; updatePID &rArr; updateErrorPID &rArr; sumPID &rArr; constraintFloatValue &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatePidOnAxisDebug
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDataToQuadCore
</UL>

<P><STRONG><a name="[1bb]"></a>updateQuadState</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, flycontrolblock.o(i.updateQuadState))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateFlyControlBlock
</UL>

<P><STRONG><a name="[190]"></a>updateTempAndPressureMs5611Calculator</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ms5611calculator.o(i.updateTempAndPressureMs5611Calculator))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = updateTempAndPressureMs5611Calculator &rArr; calculateAltitude &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTemp
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculatePressure
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateAltitude
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readTempFromMs5611
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPressureFromMs5611
</UL>

<P><STRONG><a name="[1b0]"></a>waitPressureResultFromMs5611</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, barometerms5611.o(i.waitPressureResultFromMs5611))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = waitPressureResultFromMs5611 &rArr; initDeltaTimeChecker &rArr; resetDeltaTimeChecker &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnableDeltaTimeChecker
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDeltaTimeChecker
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBarometerMs5611
</UL>

<P><STRONG><a name="[1b1]"></a>waitTempResultFromMs5611</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, barometerms5611.o(i.waitTempResultFromMs5611))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = waitTempResultFromMs5611 &rArr; initDeltaTimeChecker &rArr; resetDeltaTimeChecker &rArr; getCurrentTime &rArr; initCounterTimeMain
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnableDeltaTimeChecker
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDeltaTimeChecker
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateBarometerMs5611
</UL>

<P><STRONG><a name="[181]"></a>wrapBytesToInt16_tArray</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, arrayutil.o(i.wrapBytesToInt16_tArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = wrapBytesToInt16_tArray
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readGyroOffset
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readAccelOffset
</UL>

<P><STRONG><a name="[1a4]"></a>writeAltitudeOffset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dronestore.o(i.writeAltitudeOffset))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startAltitudeCalibrationProgram
</UL>

<P><STRONG><a name="[1a0]"></a>writeByteWithOutRegViaI2c</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, i2c.o(i.writeByteWithOutRegViaI2c))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = writeByteWithOutRegViaI2c &rArr; writeBytesWithOutRegViaI2c &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeBytesWithOutRegViaI2c
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetMs5611
</UL>

<P><STRONG><a name="[196]"></a>writeBytesWithOutRegViaI2c</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, i2c.o(i.writeBytesWithOutRegViaI2c))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = writeBytesWithOutRegViaI2c &rArr; startI2C &rArr; I2C_CheckEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopI2C
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeByteWithOutRegViaI2c
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestI2C
</UL>

<P><STRONG><a name="[1a8]"></a>writeGyroOffset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dronestore.o(i.writeGyroOffset))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startGyroCalibrationProgram
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[80]"></a>SetSysClock</STRONG> (Thumb, 272 bytes, Stack size 12 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[86]"></a>TM_I2C1_INT_InitPins</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, tm_stm32f4_i2c.o(i.TM_I2C1_INT_InitPins))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = TM_I2C1_INT_InitPins &rArr; TM_GPIO_InitAlternate &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_InitCustomPinsCallback
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_InitAlternate
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Init
</UL>

<P><STRONG><a name="[88]"></a>TM_I2C2_INT_InitPins</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, tm_stm32f4_i2c.o(i.TM_I2C2_INT_InitPins))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = TM_I2C2_INT_InitPins &rArr; TM_GPIO_InitAlternate &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_InitCustomPinsCallback
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_InitAlternate
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Init
</UL>

<P><STRONG><a name="[89]"></a>TM_I2C3_INT_InitPins</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tm_stm32f4_i2c.o(i.TM_I2C3_INT_InitPins))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = TM_I2C3_INT_InitPins &rArr; TM_GPIO_InitAlternate &rArr; TM_GPIO_INT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_InitCustomPinsCallback
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_GPIO_InitAlternate
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_I2C_Init
</UL>

<P><STRONG><a name="[b3]"></a>internal_alloc</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, mallocr.o(i.internal_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = internal_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
